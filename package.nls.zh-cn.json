{
	"action.switchtov1": "切换到ahk v1",
	"action.skipline": "跳过行",
	"action.stopparsing": "停止解析",
	"ahk2.autolibinclude": "对用户库和标准库, 本地库提供补全和自动include",
	"ahk2.commenttags": "用来从注释中提取命名标记的正则表达式, 并生成模块符号",
	"ahk2.compile": "编译脚本",
	"ahk2.compilercmd": "编译器命令行选项. 如果未指定ahk2exe.exe, 将使用默认路径. ${execPath}等价于当前选择的AutoHotkey.exe",
	"ahk2.completefunctionparens": "当右侧不存在'('或'['时, 给函数补全添加括号; 否则向右移动光标",
	"ahk2.completioncommitcharacters": "提交自动完成的字符, 例如'.('",
	"ahk2.debug": "调试脚本",
	"ahk2.debug.attach": "附加到运行中的脚本",
	"ahk2.debug.params": "带参调试",
	"ahk2.defaultdebugger": "设置默认调试器",
	"ahk2.interpreterpath": "AutoHotkey.exe可执行文件的路径. 如果没有为工作区选择解释器, 则使用此默认设置. 扩展也不会设置或更改此设置的值, 它只会从中读取. 如果选择AutoHotkeyUX.exe, 将使用UX Launcher启动脚本.",
	"ahk2.description": "基于 vscode-lsp 协议的 Autohotkey2 语言支持",
	"ahk2.actionwhenv1isdetected": "检测到v1脚本时的行为",
	"ahk2.generatecomment": "生成注释模板",
	"ahk2.help": "快捷帮助",
	"ahk2.run": "运行脚本",
	"ahk2.setinterpreter": "选择AutoHotkey2解释器",
	"ahk2.selection.run": "运行选择的脚本",
	"ahk2.stop": "停止运行中的脚本",
	"ahk2.diagnostics.classstaticmembercheck": "检查类静态成员是否存在",
	"ahk2.diagnostics.paramscheck": "检查函数调用参数个数是否正确",
	"ahk2.symbolfoldingfromopenbrace": "强制符号折叠从大括号处开始",
	"ahk2.updateversioninfo": "更新文件版本信息",
	"ahk2.workingdirs": "设置脚本的工作目录",
	"codeaction.include": "导入 '{0}'",
	"completionitem.author": "添加作者, 描述, 日期, 版本等文件信息.",
	"completionitem.generatecomment": "生成当前作用域函数/方法的注释模板.",
	"completionitem.include": "从'{0}'自动导入",
	"completionitem.new": "构造类的新实例.",
	"completionitem.prototype": "检索或设置类的所有实例所基于的对象.",
	"completionitem.super": "在继承类中, super 可以代替 this 来访问在派生类中被重写的方法或属性的超类版本.",
	"completionitem.this": "在类中, 通过 this 访问该类的其他实例变量和方法.",
	"completionitem.thishotkey": "热键函数的隐藏参数.",
	"completionitem.value": "在动态属性 set 中, Value 包含被分配的值.",
	"diagnostic.acceptparams": "'{0}' 接受{1}个参数",
	"diagnostic.assignerr": "{0} '{1}'不能用作输出变量",
	"diagnostic.classinfuncerr": "函数不能包含类",
	"diagnostic.classuseerr": "类不能用作输出变量",
	"diagnostic.conflictserr": "{0} '{2}'声明和已存在的{1}冲突",
	"diagnostic.declarationerr": "意外的声明",
	"diagnostic.defaultvalmissing": "'{0}' 需要参数默认值",
	"diagnostic.deprecated": "使用'{0}'而不是'{1}'",
	"diagnostic.didyoumean": "你是想用'{0}'吗?",
	"diagnostic.dupdeclaration": "重复声明",
	"diagnostic.duplabel": "重复的标签声明",
	"diagnostic.filenotexist": "'{0}'文件不存在",
	"diagnostic.funccallerr": "函数调用需要空格或'(', 仅在参数之间使用逗号",
	"diagnostic.funccallerr2": "在表达式中, 函数调用需要括号",
	"diagnostic.hotdeferr": "热键/热字串不能在函数/类中定义",
	"diagnostic.invalidusage": "'{0}'不能在函数/类中使用",
	"diagnostic.hotmissbrace": "热键或热字符串缺少左括号",
	"diagnostic.invaliddefinition": "无效的{0}定义",
	"diagnostic.invalidhotdef": "无效的热键定义",
	"diagnostic.invalidparam": "无效的参数定义",
	"diagnostic.invalidprop": "不是有效的getter/setter属性",
	"diagnostic.invalidpropname": "对象字面量中的属性名无效",
	"diagnostic.invalidsymbolname": "无效的符号命名 '{0}'",
	"diagnostic.maybehavenotmember": "类'{0}'可能没有成员'{1}'",
	"diagnostic.maybev1": "这可能是一个v1脚本, lexer停止解析.",
	"diagnostic.missing": "丢失对应的 '{0}'",
	"diagnostic.missingspace": "前面缺少空格或运算符",
	"diagnostic.missingparam": "缺少必需的参数",
	"diagnostic.missingretval": "函数缺少返回值",
	"diagnostic.objectliteralerr": "对象字面量存在错误",
	"diagnostic.pathinvalid": "无效的文件路径",
	"diagnostic.paramcounterr": "应有 {0} 个参数, 但获得 {1} 个",
	"diagnostic.propdeclaraerr": "不是有效的方法, 类或属性定义",
	"diagnostic.propemptyparams": "动态属性不允许使用空[]",
	"diagnostic.propnotinit": "属性声明未初始化",
	"diagnostic.requirev1": "此脚本需要AutoHotkey v1, lexer停止解析.",
	"diagnostic.reservedworderr": "保留字'{0}'不得用作变量名",
	"diagnostic.resourcenotfound": "未找到或无法解析资源",
	"diagnostic.skipline": "该行被跳过且未解析",
	"diagnostic.tryswitchtov1": "尝试切换到AutoHotkey v1.",
	"diagnostic.typemaybenot": "类型可能不是 '{0}'",
	"diagnostic.unexpected": "意外的'{0}'",
	"diagnostic.unknown": "未知的{0}",
	"diagnostic.invalidencoding": "'{0}' 无效的文件编码",
	"diagnostic.unknownoperatoruse": "未知的操作符使用",
	"diagnostic.unknowntoken": "未知的Token '{0}'",
	"diagnostic.unsupportinclude": "函数、类中的#include无法正确地推导作用域和代码补全",
	"diagnostic.unterminated": "未终止的字符串文本",
	"setting.ahkpatherr": "AutoHotkey解释器不存在, 在'设置-AutoHotkey2.InterpreterPath'中重新指定",
	"setting.getenverr": "获取环境变量失败",
	"setting.uialimit": "由于安全限制, UIA可执行文件不允许重定向stdin/stdout, 因此依赖于此的一些功能将无法工作",
	"setting.versionerr": "当前AutoHotkey.exe不是v2版本, 无法获得正确的语法解析、补全等功能",
	"response.cannotrename": "无法重命名此元素。",
	"response.cannotrenamestdlib": "不能重命名标准AutoHotkey库中定义的元素。"
}